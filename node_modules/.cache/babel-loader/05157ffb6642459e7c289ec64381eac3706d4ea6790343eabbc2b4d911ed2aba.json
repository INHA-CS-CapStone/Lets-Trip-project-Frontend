{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fnsk1\\\\Desktop\\\\LETSTRIP\\\\Lets-Trip-project-Frontend\\\\src\\\\components\\\\recommend\\\\type.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport './type.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Type() {\n  _s();\n  const [selectedTypes, setSelectedTypes] = useState([]);\n  const handleTypeClick = type => {\n    setSelectedTypes(prevSelectedTypes => {\n      if (prevSelectedTypes.includes(type)) {\n        return prevSelectedTypes.filter(item => item !== type);\n      } else {\n        return [...prevSelectedTypes, type];\n      }\n    });\n  };\n  const tourismTypes = ['자연', '역사', '문화', '쇼핑', '레포츠'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC120\\uD638\\uD558\\uB294 \\uAD00\\uAD11\\uD0C0\\uC785\\uC744 \\uC120\\uD0DD\\uD574 \\uC8FC\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), tourismTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedTypes.includes(type) ? 'selected' : '',\n        onClick: () => handleTypeClick(type),\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/hashtag\",\n          state: {\n            selectedTypes: selectedTypes\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 84\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Type, \"+5hCKmF7MqZ3aBmT9eywRwaIciY=\");\n_c = Type;\nexport default Type;\nvar _c;\n$RefreshReg$(_c, \"Type\");","map":{"version":3,"names":["Link","useState","jsxDEV","_jsxDEV","Type","_s","selectedTypes","setSelectedTypes","handleTypeClick","type","prevSelectedTypes","includes","filter","item","tourismTypes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","to","pathname","state","_c","$RefreshReg$"],"sources":["C:/Users/fnsk1/Desktop/LETSTRIP/Lets-Trip-project-Frontend/src/components/recommend/type.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport './type.css';\r\n\r\nfunction Type(){\r\n  const [selectedTypes, setSelectedTypes] = useState([]);\r\n\r\n  const handleTypeClick = (type) => {\r\n    setSelectedTypes(prevSelectedTypes => {\r\n      if (prevSelectedTypes.includes(type)) {\r\n        return prevSelectedTypes.filter(item => item !== type);\r\n      } else {\r\n        return [...prevSelectedTypes, type];\r\n      }\r\n    });\r\n  }\r\n\r\n  const tourismTypes = ['자연', '역사', '문화', '쇼핑', '레포츠'];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"App\">\r\n        <h1>선호하는 관광타입을 선택해 주세요!</h1>\r\n        {tourismTypes.map(type => (\r\n          <button\r\n            key={type}\r\n            className={selectedTypes.includes(type) ? 'selected' : ''}\r\n            onClick={() => handleTypeClick(type)}\r\n          >\r\n            {type}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"button-container\">\r\n        <Link to={{pathname: \"/hashtag\", state: { selectedTypes: selectedTypes }}}><button>다음</button></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Type"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMO,eAAe,GAAIC,IAAI,IAAK;IAChCF,gBAAgB,CAACG,iBAAiB,IAAI;MACpC,IAAIA,iBAAiB,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAE;QACpC,OAAOC,iBAAiB,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKJ,IAAI,CAAC;MACxD,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,iBAAiB,EAAED,IAAI,CAAC;MACrC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,YAAY,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;EAEpD,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAKa,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBZ,OAAA;QAAAY,QAAA,EAAI;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3BN,YAAY,CAACO,GAAG,CAACZ,IAAI,iBACpBN,OAAA;QAEEa,SAAS,EAAEV,aAAa,CAACK,QAAQ,CAACF,IAAI,CAAC,GAAG,UAAU,GAAG,EAAG;QAC1Da,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACC,IAAI,CAAE;QAAAM,QAAA,EAEpCN;MAAI,GAJAA,IAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKH,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eAC/BZ,OAAA,CAACH,IAAI;QAACuB,EAAE,EAAE;UAACC,QAAQ,EAAE,UAAU;UAAEC,KAAK,EAAE;YAAEnB,aAAa,EAAEA;UAAc;QAAC,CAAE;QAAAS,QAAA,eAACZ,OAAA;UAAAY,QAAA,EAAQ;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CAlCQD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAoCb,eAAeA,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}